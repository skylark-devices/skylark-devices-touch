{"version":3,"sources":["skylark-devices-webgl-all.js"],"names":["define","obj1","path","obj2","split","length","ns","i","name","_attach","skylark","attach","obj","main","getWebGLCtx","canvas","document","createElement","context","getContext","some","getParameter","e","isWebGLSupported","window","WebGLRenderingContext","getMaxTextureWidth","ctx","MAX_TEXTURE_SIZE","webgl"],"mappings":";;;;;;;g4BAAAA,EAAA,8BAAA,WACA,OAAA,SAAAC,EAAAC,EAAAC,GACA,iBAAAD,IACAA,EAAAA,EAAAE,MAAA,MAOA,IALA,IAAAC,EAAAH,EAAAG,OACAC,EAAAL,EACAM,EAAA,EACAC,EAAAN,EAAAK,KAEAA,EAAAF,GACAC,EAAAA,EAAAE,GAAAF,EAAAE,OACAA,EAAAN,EAAAK,KAGA,OAAAD,EAAAE,GAAAL,KAGAH,EAAA,uBACA,aACA,SAAAS,GACA,IAAAC,GACAC,OAAA,SAAAT,EAAAU,GACA,OAAAH,EAAAC,EAAAR,EAAAU,KAGA,OAAAF,IAGAV,EAAA,yBACA,QACA,SAAAU,GACA,OAAAA,IAEAV,EAAA,oBAAA,yBAAA,SAAAa,GAAA,OAAAA,IAEAb,EAAA,+BACA,oBACA,SAAAU,GAMA,SAAAI,IACA,IAAAC,EAAAC,SAAAC,cAAA,UAEAC,EAAA,KAEA,OAAAH,EAAAI,aAHA,QAAA,qBAAA,YAAA,aAOAC,KAAA,SAAAZ,GACA,IAEA,OADAU,EAAAH,EAAAI,WAAAX,KACA,mBAAAU,EAAAG,aACA,MAAAC,GACA,OAAA,KAGAJ,EAXA,KAxCA,OAAAR,EAAAC,OAAA,iBACAG,YAAAA,EACAS,iBA4DA,WACA,QAAAC,OAAAC,uBAAA,OAAAX,KA5DAY,mBAbA,WACA,IAAAC,EAAAb,IACA,OAAA,OAAAa,EACAA,EAAAN,aAAAM,EAAAC,kBAGA,OAWA5B,EAAA,8BACA,WACA,SAAA6B,GACA,OAAAA,IAEA7B,EAAA,yBAAA,8BAAA,SAAAa,GAAA,OAAAA","file":"../skylark-devices-webgl-all.js","sourcesContent":["define('skylark-langx-ns/_attach',[],function(){\r\n    return  function attach(obj1,path,obj2) {\r\n        if (typeof path == \"string\") {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length,\r\n            ns=obj1,\r\n            i=0,\r\n            name = path[i++];\r\n\r\n        while (i < length) {\r\n            ns = ns[name] = ns[name] || {};\r\n            name = path[i++];\r\n        }\r\n\r\n        return ns[name] = obj2;\r\n    }\r\n});\ndefine('skylark-langx-ns/ns',[\r\n    \"./_attach\"\r\n], function(_attach) {\r\n    var skylark = {\r\n    \tattach : function(path,obj) {\r\n    \t\treturn _attach(skylark,path,obj);\r\n    \t}\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx-ns/main',[\r\n\t\"./ns\"\r\n],function(skylark){\r\n\treturn skylark;\r\n});\ndefine('skylark-langx-ns', ['skylark-langx-ns/main'], function (main) { return main; });\n\ndefine('skylark-devices-webgl/webgl',[\r\n\t\"skylark-langx-ns\"\r\n],function(skylark){\r\n\r\n  /**\r\n   * @summary Tries to return a canvas webgl context\r\n   * @returns {WebGLRenderingContext}\r\n   */\r\n  function getWebGLCtx() {\r\n    var canvas = document.createElement('canvas');\r\n    var names = ['webgl', 'experimental-webgl', 'moz-webgl', 'webkit-3d'];\r\n    var context = null;\r\n\r\n    if (!canvas.getContext) {\r\n      return null;\r\n    }\r\n\r\n    if (names.some(function(name) {\r\n        try {\r\n          context = canvas.getContext(name);\r\n          return (context && typeof context.getParameter === 'function');\r\n        } catch (e) {\r\n          return false;\r\n        }\r\n      })) {\r\n      return context;\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @summary Detects if WebGL is supported\r\n   * @returns {boolean}\r\n   */\r\n  function isWebGLSupported() {\r\n    return !!window.WebGLRenderingContext && getWebGLCtx() !== null;\r\n  };\r\n\r\n\r\n  /**\r\n   * @summary Gets max texture width in WebGL context\r\n   * @returns {int}\r\n   */\r\n   function getMaxTextureWidth() {\r\n    var ctx = getWebGLCtx();\r\n    if (ctx !== null) {\r\n      return ctx.getParameter(ctx.MAX_TEXTURE_SIZE);  \r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  return skylark.attach(\"devices.webgl\",{\r\n  \tgetWebGLCtx,\r\n  \tisWebGLSupported,\r\n  \tgetMaxTextureWidth\r\n  })\r\n\t\r\n});\ndefine('skylark-devices-webgl/main',[\r\n\t\"./webgl\"\r\n],function(webgl){\r\n\treturn webgl;\r\n});\ndefine('skylark-devices-webgl', ['skylark-devices-webgl/main'], function (main) { return main; });\n\n"]}